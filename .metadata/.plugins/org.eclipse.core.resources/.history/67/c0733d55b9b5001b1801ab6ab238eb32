/*
package com.servebeer.quake.advancements;

import java.util.ArrayList;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.scheduler.BukkitRunnable;

import eu.endercentral.crazy_advancements.Advancement;
import eu.endercentral.crazy_advancements.AdvancementDisplay;
import eu.endercentral.crazy_advancements.AdvancementDisplay.AdvancementFrame;
import eu.endercentral.crazy_advancements.AdvancementVisibility;
import eu.endercentral.crazy_advancements.JSONMessage;
import eu.endercentral.crazy_advancements.NameKey;
import eu.endercentral.crazy_advancements.manager.AdvancementManager;

public enum AdvancementBase {

	ROOT(Material.GRASS, 1, "{\"text\":\"First Night\"}", "{\"text\":\"A timestamp for your world...\"}", "minecraft:textures/blocks/concrete.lime.png", false, false, AdvancementVisibility.ALWAYS),
	CHAT(ROOT, Material.EMERALD, 1, "{\"text\":\"Chatter\",\"color\":\"red\"}", "{\"text\":\"A timestamp for your world...\"}", 1, 0, true, true, AdvancementVisibility.ALWAYS)
	
	;
	
	private static AdvancementManager manager = new AdvancementManager();
	
	private Advancement advancement;
	private final AdvancementBase parent;
	private final Material icon;
	private final int required;
	private final String title, description, backgroundTexture;
	private final float x, y;
	private final boolean showToast, displayMessage;
	private final AdvancementVisibility visibility;
	
	private AdvancementBase(AdvancementBase parent, Material icon, int required, String title, String description, float x, float y, boolean showToast, boolean displayMessage, AdvancementVisibility visibility)
	{
		this.parent = parent;
		this.icon = icon;
		this.required = required;
		this.title = title;
		this.description = description;
		this.backgroundTexture = null;
		this.x = x;
		this.y = y;
		this.showToast = showToast;
		this.displayMessage = displayMessage;
		this.visibility = visibility;
	}
	
	private AdvancementBase(Material icon, int required, String title, String description, String backgroundTexture, boolean showToast, boolean displayMessage, AdvancementVisibility visibility)
	{
		this.parent = null;
		this.icon = icon;
		this.required = required;
		this.title = title;
		this.description = description;
		this.backgroundTexture = backgroundTexture;
		this.x = 0;
		this.y = 0;
		this.showToast = showToast;
		this.displayMessage = displayMessage;
		this.visibility = visibility;
	}
	
	public AdvancementBase getParent() {
		return parent;
	}
	
	public Advancement getAdvancement() {
		return advancement;
	}
	
	public Material getIcon() {
		return icon;
	}
	
	public String getTitle() {
		return title;
	}
	
	public int getRequired() {
		return required;
	}
	
	public String getDescription() {
		return description;
	}
	
	public String getBackgroundTexture() {
		return backgroundTexture;
	}
	
	public float getX() {
		return x;
	}
	
	public float getY() {
		return y;
	}
	
	public boolean isShowToast() {
		return showToast;
	}
	
	public boolean isDisplayMessage() {
		return displayMessage;
	}
	
	public AdvancementVisibility getVisibility() {
		return visibility;
	}
	
	public static void registerAdvancements() {
		new BukkitRunnable() {

			ArrayList<Advancement> advancements = new ArrayList<>();
			
			@Override
			public void run() {
				for (AdvancementBase adv : AdvancementBase.values()) {
					AdvancementDisplay display = new AdvancementDisplay(adv.getIcon(), new JSONMessage(adv.getTitle()), new JSONMessage(adv.getDescription()), AdvancementFrame.TASK, adv.isShowToast(), adv.isDisplayMessage(), adv.getVisibility());
					if (adv.getParent() == null) {
						display.setBackgroundTexture(adv.getBackgroundTexture());
					}
					else {
						display.setCoordinates(adv.getX(), adv.getY());
					}
					adv.advancement = new Advancement(null, new NameKey("Advancement", adv.name().toLowerCase()), display);
					adv.advancement.setCriteria(adv.getRequired());
					advancements.add(adv.getAdvancement());
				}
				
				for(Player player : Bukkit.getOnlinePlayers()) {
					manager.loadProgress(player, advancements.toArray(new Advancement[advancements.size()]));
				}
				
				manager.addAdvancement(advancements.toArray(new Advancement[advancements.size()]));
			}
			
		}.runTaskLater(com.servebeer.quake.Main.getPlugin(com.servebeer.quake.Main.class), 3);
	}
	
}
*/
